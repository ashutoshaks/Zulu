/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import backend.Inventory;
import controller.DB;
import java.awt.BorderLayout;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.Period;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JPanel;
import org.knowm.xchart.XChartPanel;
import org.knowm.xchart.XYChart;
import org.knowm.xchart.XYChartBuilder;
import org.knowm.xchart.style.Styler.LegendPosition;

/**
 *
 * @author achcha
 */

public class ViewGraph extends javax.swing.JFrame {

    /**
     * Creates new form Graph
     */
    public ViewGraph() {
        initComponents();
        this.createGraph();
    }
    
    public final void createGraph() {
        try {
            int days = Period.between(Inventory.initialDate, Inventory.currentDate).getDays();
//            int days = 30;
            int high = (days / 30) * 30;
            int low = high - 29;
            
            Connection con = DB.getConnection();
            PreparedStatement ps = con.prepareStatement("SELECT * FROM sales WHERE day_number >= ? AND day_number <= ?");
            ps.setInt(1, low);
            ps.setInt(2, high);
            ResultSet rs = ps.executeQuery();
            ArrayList<Date> dates = new ArrayList<Date>();
            ArrayList<Float> sales = new ArrayList<Float>();
            while(rs.next()) {
                dates.add(new Date(rs.getDate("sale_date").getTime()));
                float amt = rs.getFloat("total_amount");
                float roundOff = (float) Math.round(amt * 100) / 100;
                sales.add(roundOff);
            }
            
            XYChart chart = new XYChartBuilder().width(1700).height(860).title("Area Chart").xAxisTitle("Date").yAxisTitle("Sales").build();
            
            chart.getStyler().setLegendPosition(LegendPosition.InsideNE);
//            chart.getStyler().setToolTipType(Styler.ToolTipType.xAndYLabels);
//            chart.getStyler().setDefaultSeriesRenderStyle(XYSeriesRenderStyle.Area);
            chart.getStyler().setToolTipsEnabled(true);
            chart.getStyler().setToolTipsAlwaysVisible(true);
            
            chart.addSeries("a", dates, sales);
            
            JPanel chartPanel = new XChartPanel<XYChart>(chart);
//            chartPanel.setBackground(new java.awt.Color(65, 62, 59));
            this.add(chartPanel, BorderLayout.NORTH);
//            
            JPanel panel2 = new JPanel();
            panel2.setBackground(new java.awt.Color(65, 62, 59));
            this.add(panel2, BorderLayout.SOUTH);
            JButton jButton1 = new JButton();
            jButton1.setBackground(new java.awt.Color(255, 255, 255));
            jButton1.setFont(new java.awt.Font("Yrsa Medium", 0, 25)); // NOI18N
            jButton1.setText("Back");
            jButton1.setPreferredSize(new java.awt.Dimension(130, 45));
            jButton1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton1ActionPerformed(evt);
                }
            });  
            panel2.add(jButton1);
        } catch (SQLException ex) {
            Logger.getLogger(ViewGraph.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1700, 950));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        Dashboard dashObj = new Dashboard();
        dashObj.setVisible(true);
        dispose();
    } 
/**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewGraph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewGraph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewGraph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewGraph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewGraph().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
